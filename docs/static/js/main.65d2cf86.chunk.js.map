{"version":3,"sources":["components/blotter/blotter.js","components/product/product.tsx","components/detail/detail.tsx","components/about/about.tsx","components/home/home.tsx","components/blog/blog.tsx","index.js"],"names":["Blotter","props","className","products","map","p","id","name","onClick","view","edit","delete","ProductForm","useForm","defaultValues","product","register","handleSubmit","reset","useEffect","console","log","onSubmit","save","htmlFor","type","close","Detail","About","Home","initial","Blog","useState","setProducts","setProduct","mode","setMode","saveProduct","index","findIndex","ps","slice","closeProduct","max","length","Math","apply","concat","basename","process","to","href","path","pr","splice","renderProduct","Square","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65d2cf86.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function Blotter(props) {\n\n    return (\n        <div className=\"mb-3\">\n        <table className=\"table table-bordered table-sm\">\n            <thead>\n                <tr><td>Id</td><td>Name</td>\n                </tr>\n                </thead>\n                <tbody>\n        {\n          props.products.map((p) => <tr key={p.id}>\n              <td>{p.id}</td>\n              <td>{p.name}</td>\n              <td><button className=\"btn btn-default btn-sm\" onClick={() => props.view(p)}>View</button></td>\n              <td><button className=\"btn btn-default btn-sm\" onClick={() => props.edit(p)}>Edit</button></td>\n              <td><button className=\"btn btn-danger btn-sm\" onClick={() => props.delete(p)}>Delete</button></td>\n              </tr>)\n      }\n      </tbody>\n        </table>\n        </div>\n    );\n  }","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { Product } from '../../model/product';\n\ntype Inputs = {\n    name: string,\n    exampleRequired: string,\n};\n\nexport default function ProductForm(props: any) {\n\n    const { register, handleSubmit, reset } = useForm<Product>({\n        defaultValues: props.product\n    });\n\n    useEffect(() => {\n        reset(props.product);\n    }, [props.product]);\n    const onSubmit = (product: Product) => {\n        console.log(product);\n        props.save(product);\n    }\n\n    console.log('render form', props);\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n                {props.product.id\n                    ? <h6>Update du produit {props.product.id} / {props.product.name}</h6>\n                    : <h6>Création d'un produit</h6>}\n            </div>\n\n            <div className=\"row\">\n                <div className=\"form-group col-md-12\">\n                    <label htmlFor=\"name\">Nom</label>\n                    <input type=\"text\" className=\"form-control\"\n                        {...register(\"name\")} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <button className=\"btn btn-primary mr-2\">save</button>\n                <button className=\"btn btn-default\" onClick={() => props.close()}>cancel</button>\n            </div>\n        </form>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function Detail(props: any) {\n\n    return (\n        <div>\n            <div className=\"row mb-2\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                    <div className=\"card-title\">\n                            <h5>\n                                Détail product\n                            </h5>\n                        </div>\n                        <p className=\"card-text\">\n                                {props.product.id} / {props.product.name}\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n\n                <button className='btn' onClick={() => props.close()}>close</button>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n\nexport function About() {\n    return <h2>About</h2>;\n}","import React from 'react';\n\nexport function Home() {\n    return <h2>Home</h2>;\n}","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Blotter from '../blotter/blotter'\nimport { Product } from '../../model/product';\nimport ProductForm from '../product/product';\nimport Detail from '../detail/detail';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { About } from '../about/about';\nimport { Home } from '../home/home';\nimport { createBrowserHistory } from 'history';\n\nconst initial: Product[] = [\n    { id: 1, name: 'coca' },\n    { id: 2, name: 'pepsi' }\n];\n\nexport default function Blog() {\n    const [products, setProducts] = useState<Product[]>(initial);\n    const [product, setProduct] = useState<Product | null>(null);\n    const [mode, setMode] = useState<'VIEW' | 'EDIT'>('VIEW');\n\n    useEffect(() => {\n        console.log('blog');\n    });\n\n    const editProduct = (pr: Product) => {\n        setProduct(pr);\n        setMode('EDIT');\n    }\n\n    const viewProduct = (pr: Product) => {\n        setProduct(pr);\n        setMode('VIEW');\n    }\n\n    const saveProduct = (product: Product) => {\n        if (product.id) {\n            const index = products.findIndex(p => p.id === product.id);\n\n            if (index !== -1) {\n                const ps = products.slice();\n                ps[index].name = product.name;\n                setProducts(ps);\n                closeProduct();\n            }\n        } else {\n            const max = products.length === 0 ? 0 : Math.max.apply(Math, products.map(p => p.id ? p.id : 0));\n            const ps = products.slice();\n            setProducts(products.concat({ id: max + 1, name: product.name }));\n            closeProduct();\n        }\n    }\n\n    const deleteProduct = (product: Product) => {\n        setProduct(null);\n        if (product.id) {\n            const index = products.findIndex(p => p.id === product.id);\n            const ps = products.slice();\n            ps.splice(index, 1);\n            setProducts(ps);\n        }\n\n    }\n\n    const closeProduct = () => {\n        setProduct(null);\n    }\n\n    /*     (() => { \n       })\n     */\n    const renderProduct = (product: Product) => {\n        switch (mode) {\n            case 'EDIT': {\n                return <ProductForm product={product}\n                    save={saveProduct}\n                    close={closeProduct}></ProductForm>\n            }\n            case 'VIEW': {\n                return <Detail product={product} close={closeProduct} />\n            }\n            default:\n\n        }\n    };\n\n    const handleClickCreate = () => {\n        setProduct({ name: '' });\n        setMode('EDIT');\n    }\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <div>\n\n                <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n                    <h5 className=\"my-0 mr-md-auto font-weight-normal\">React demo</h5>\n                    <nav className=\"my-2 my-md-0 mr-md-3\">\n                        <Link className=\"p-2 text-dark\" to=\"./\">Home</Link>\n                        <Link className=\"p-2 text-dark\" to=\"./products\">Products</Link>\n                        <Link className=\"p-2 text-dark\" to=\"./about\">About</Link>\n                    </nav>\n                    <a className=\"btn btn-outline-primary\" href=\"#\">Sign up</a>\n                </div>\n\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/about\">\n                        <About />\n                    </Route>\n                    <Route path=\"/products\">\n                        <div className=\"container\">\n                            <div className=\"row mb-3\">\n                                <h1>\n                                    Blog\n                 </h1>\n                            </div>\n                            <div className=\"row mb-3\">\n                                <button className=\"btn btn-success\" onClick={() => handleClickCreate()}>create</button>\n                            </div>\n\n                            <div className=\"row mb-3\">\n                                <Blotter products={products}\n                                    edit={editProduct}\n                                    view={viewProduct}\n                                    delete={deleteProduct}></Blotter>\n                            </div>\n                            {\n                                product ?\n                                    renderProduct(product)\n                                    : <p></p>\n                            }\n                        </div>         </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Blog from './components/blog/blog';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n        <Square\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [\n          {\n            squares: Array(9).fill(null)\n          }\n        ],\n        stepNumber: 0,\n        xIsNext: true\n      };\n    }\n  \n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      this.setState({\n        history: history.concat([\n          {\n            squares: squares\n          }\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  \n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n  \n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n  \n      const moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move :\n          'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n  \n      let status;\n      if (winner) {\n        status = \"Winner: \" + winner;\n      } else {\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n      }\n  \n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={i => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(<Blog />, document.getElementById(\"root\"));\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  "],"sourceRoot":""}